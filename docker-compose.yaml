version: '3.9'

services:
  postgres:
    image: postgres:17-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: db_migrations
    depends_on:
      postgres:
        condition: service_healthy
    command: ["./migrate", "-up"]
    env_file:
      - .env
    restart: on-failure

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go_app
    restart: on-failure
    depends_on:
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_started
    env_file:
      - .env

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      app:
        condition: service_started

volumes:
  postgres_data: